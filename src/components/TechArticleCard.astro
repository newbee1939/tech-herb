---
const ARTICLE_LIMIT = 5;

type TechArticle = {
	title: string,
	link: string,
}
type TechArticleMedium = {
	name: string,
	link: string,
	items: TechArticle[],
}

// ↓最新のPublickeyの記事を取得
type PublicKeyArticle = {
	title: string,
	pubDate: string,
	link: string,
	guid: string,
	author: string,
	thumbnail: string,
	description: string,
	content: string,
	enclosure: {},
	categories: string[],
};
const latestPublickeyArticles = (await(await fetch('https://api.rss2json.com/v1/api.json?rss_url=https://www.publickey1.jp/atom.xml')).json()).items;
const slicedPublickeyArticles: TechArticle[] = latestPublickeyArticles.slice(0, ARTICLE_LIMIT).map((article: PublicKeyArticle) => {
	return {
		title: article.title,
		link: article.link,
	}
});
const publickeyMedium: TechArticleMedium = {
	name: "Publickey",
	link: "https://www.publickey1.jp/",
	items: slicedPublickeyArticles,
}
// ↑最新のPublickeyの記事を取得

const techArticleMedia: TechArticleMedium[] = [publickeyMedium];
---

<!-- 媒体毎にループを回す -->
{techArticleMedia.map((medium) => (
	<ol class="tech-article-list">
		<h3 class="medium-name"><a href={medium.link}>{medium.name}</a></h3>
	{/* 媒体内の記事毎にループを回す */}
	{medium.items.map((item) => (
		<li class="tech-article-card">
			<a href={item.link}>{item.title}</a>
		</li>
	))}
	</ol>
))}

<style>
	.tech-article-list {
		background-color: rgb(216, 224, 231);
		color: black;
		border-radius: 10px;
	}
	.medium-name {
		font-weight: bold;
		padding-top: 5px;
	}
	.tech-article-card {
		padding: 7px;
	}
</style>
